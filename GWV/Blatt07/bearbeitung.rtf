{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 AppleSymbols;\f2\fnil\fcharset0 HelveticaNeue;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red53\green53\blue53;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c27059\c27059\c27059;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww14720\viewh14180\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Aufgabe 7.1.1)\
\
Variablen: S,E,N,D,M,O,R,Y\
Menge der Variablen: 8\
Menge der m\'f6glichen Zahlen: 10 (0,1,2,3,4,5,6,7,8,9)\
\
Constraints:\
\
SEND + MORE = MONEY\
\
Daraus folgt:\
\
D + E = Y\
N + R = E\
E + O = N\
S + M = MO\
\
Daraus Wiederrum folgt, dass S und M jeweils NICHT 0 sein k\'f6nnen, da aus S + M eine zweistellige Zahl entstehen muss.\
\
Au\'dferdem m\'fcssen alle 8 Variablen unterschiedlich sein und am Ende nat\'fcrlich den oben genannten Rechnungen standhalten. Zuletzt muss jeder Buchstabe genau einer Zahl zugeordnet werden zwischen 0 und 9, daraus ergeben sich folgende formalisierten Constraints.\
\
C1 = \{ (S,E,N,D,M,O,R,Y) 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\uc0\u8712 
\f0  Z8 | 0 =< S,\'85,Y >= 9 \}\
C2 = \cf0 \cb1 \kerning1\expnd0\expndtw0 \{ (S,E,N,D,M,O,R,Y) 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\uc0\u8712 
\f0  Z8 | 1000 * S + 100 * E + 10 * N + D\
					        +1000 * M + 100 * O + 10 * R + E\
			   = 10000 * M + 1000 * O + 100 * N + 10 * E + Y \}\
C3 = \cf0 \cb1 \kerning1\expnd0\expndtw0 \{ (S,E,N,D,M,O,R,Y) 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\uc0\u8712 
\f0  Z8 | S != 0 \}\
C4 = \cf0 \cb1 \kerning1\expnd0\expndtw0 \{ (S,E,N,D,M,O,R,Y) 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\uc0\u8712 
\f0  Z8 | M != 0 \}\
C5 = \cf0 \cb1 \kerning1\expnd0\expndtw0 \{ (S,E,N,D,M,O,R,Y) 
\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\uc0\u8712 
\f0  Z8 | S,\'85,Y verschieden \}\
\
Aus diesen Constraints folgt: (9,5,6,7,1,0,8,2) 
\f1 \uc0\u8712 
\f0  Z8\
\
	9567\
+	1085\
=.    10652\
\
Aufgabe 7.1.2\
\
Das Problem hier beginnt schon mit dem ersten Wort. Wir tragen ein Wort horizontal in A1 ein, es muss aber jeder Buchstabe des Wortes ein Anfangsbuchstabe eines anderen Wortes sein k\'f6nnen.\
\
Wir haben nur eine begrenzte M\'f6glichkeit an Worten, die meisten beginnen mit einem a, jedoch gibt es kein Wort mit 2 a\'92s.\
\
Wir brauchen zum Beispiel f\'fcr die erste Zeile ein Wort das 3 Buchstaben hat f\'fcr die wir alle auch W\'f6rter mit diesen Anfangsbuchstaben haben. zB \'84bat\'93, b  = \{ bad, bag, ban, bat, bee, boa \}, a = \{ add, ado, \'85 , aye \}, t = \{ tar \}.\
\
Nun haben wir f\'fcr das t allerdings nur ein Wort, es w\'fcrde sich also automatisch ergeben:\
\
BAT\
XXA\
XXR\
\
Daraus ergeben sich jetzt neue Vorschriften f\'fcr die folgenden Worte. Dementsprechend l\'e4uft man h\'e4ufig in Sackgassen. Daher starteten wir zu Beginn, indem wir \'fcberlegten, welche Worte in die oberste Zeile passen w\'fcrden, sodass an alle drei Buchstaben noch ein Wort passen w\'fcrde (wenn also das Wort w enth\'e4lt, es aber kein Wort mit w gibt, entf\'e4llt es). Es bleiben:\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf4 \cb1 \kerning1\expnd0\expndtw0 are, art, bat, bee, boa, ear, eft, far, fat, oaf, rat, tar\
\
Wenn in ein Wort mit A startet, muss auch das Wort in der ersten linken Spalte mit A starten. Analog zu vorher k\'f6nnen also nur die gefundenen Worte, paare ergeben. Wir testen alle Wortpaare wie folgt aus:\
\
ARE\
RXX\
TXX\
Dies ist das Beispiel f\'fcr ARE-ART. Dies entf\'e4llt, da es keine 2 Worte mit Rs gibt.\
\
EAR-EFT entf\'e4llt auch. Auf F folgt entweder A oder das F-Wort endet auf T. Wenn ein A folgt, h\'e4tten wir in der mittleren Spalte ein Wort, das mit AA beginnen m\'fcsste, was es nicht gibt. Im anderen Fall, w\'fcrde die letzte Spalte mit einem RT starten, auch daf\'fcr gibt es kein Wort.\
\
FAR-FAT w\'fcrde entfallen. Als R-Wort gibt es nur RAT. Danach gibt es kein Wort, das mit T anf\'e4ngt und endet.\
\
BEE-ART entf\'e4llt. F\'fcr ein T-Wort m\'fcsste ein E-Wort entweder auf A oder E enden. Beides ist nicht vorhanden.\
\
Also bleibt nurnoch folgende M\'f6glichkeit:\
BEE\
OXX\
AXX\
\
Einziges Wort mit O ist OAF. Daraus folgt als untere Reihe ART, da EA nur auf R und EF nur auf EFT enden kann. Ergebnis:\
BEE\
OAF\
ART\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf2 \cb3 \expnd0\expndtw0\kerning0
Aufgabe 7.1.3\
Variablen: Alle W\'f6rter\
Dom\'e4nen: Zeilen/Spalten (Z1,Z2,Z3,S1,S2,S3)\
	Anfangs enth\'e4lt jede Dom\'e4ne alle W\'f6rter\
Constraints:\
	Auf nur einer Dom\'e4ne:\
		Z1 enth\'e4lt nur Variablen, in denen alle Buchstaben eines Wortes ein Anfangsbuchstabe eines anderen Wortes ist\
		S1 enth\'e4lt nur Variablen, in denen alle Buchstaben eines  Wortes ein Anfangsbuchstabe eines anderen Wortes ist\
		Z2 enth\'e4lt nur Variablen, in denen alle Buchstaben eines Wortes ein mittlerer Buchstabe eines anderen Wortes ist\
		S2 enth\'e4lt nur Variablen, in denen alle Buchstaben eines Wortes ein mittlerer Buchstabe eines anderen Wortes ist\
		Z3 enth\'e4lt nur Variablen, in denen alle Buchstaben eines Wortes ein letzter Buchstabe eines anderen Wortes ist\
		S3 enth\'e4lt nur Variablen, in denen alle Buchstaben eines Wortes ein letzter Buchstabe eines anderen Wortes ist\
	Mit mehr als einer Dom\'e4ne: \
		(1) Z1 und S1 haben denselben Anfang (Z1[0] == S1[0])\
		(2) Z2 und S2 haben dieselbe Mitte (Z2[1] == S2[1])\
		(3) Z3 und S3 haben dasselbe Ende (Z3[2] == S3[2])\
		(4) Z1 endet, womit S3 beginnt (Z1[2] == S3[0])\
		(5) Z3 beginnt, womit  S1 endet(Z3[0] == S1[2])\
		(6) Z1 hat in der Mitte des S2 Anfang (Z1[1] == S2[0])\
		(7) Z2 beginnt mit des S1 Mitte (Z2[0] == S1[1])\
		(8) Z2 endet mit des S3 Mitte (Z2[2] == S3[1])\
		(9) Z3 Mitte ist des S2 Ende (Z3[1] == S2[2])\
		\
\
Domain Consistency:\
Z1 und S1 enthalten nach der \'dcberpr\'fcfung dieselben Worte. Das sind folgende:\
are, art, bat, bee, boa, ear, eft, far, oaf, rat, tar\

\f2 \cf4 \cb1 \kerning1\expnd0\expndtw0 \

\f0 \cf2 \cb3 \expnd0\expndtw0\kerning0
Z2 und S2 enthalten nach der \'dcberpr\'fcfung dieselben Worte. Das sind folgende:\
Add, ado, age, ago, aid, air, and, any, ape, are, awe, ear, far, fit, oaf\
\
Z3 und S3 enthalten nach der \'dcberpr\'fcfung dieselben Worte. Das sind folgende:\
add, ado, age, ago, and, are, ark, arm, art, ear, eel, eft, far, fat, lee, rat, tar\
\
Arc Consistency (wir arbeiten die Constraints von oben nach unten ab. Constraints, die auf ver\'e4nderte Dom\'e4nen zeigen, werden erneut gepr\'fcft):\
(1) Entfernt aus Z1 und S1 far, oaf, rat, tar. Es bleibt in Z1 und S1 enthalten are, art, bat, bee, boa, ear, eft.\
(2) Entfernt aus Z2 und S2 ape, are, awe. Es bleibt in Z2 und S2 enthalten Add, ado, age, ago, aid, air, and, any, ear, far, fit, oaf.\
(3) Entfernt aus Z3 und S3  ark, arm, eel. Es bleibt in Z3 und S3 enthalten add, ado, age, ago, and, are, art, ear, eft, far, fat, lee, rat, tar\
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf4 \cb1 \kerning1\expnd0\expndtw0 (4) Z1 bleibt. Entfernt aus S3 
\f0 \cf2 \cb3 \expnd0\expndtw0\kerning0
far, fat, lee. Es bleibt in S3 enthalten add, ado, age, ago, and, are, art, ear, eft, rat, tar\
(3) \'e4ndert nichts.\
(5) Entfernt aus Z3 far, fat, lee. Z3 ist wieder == S3. S1 \'e4ndert sich nicht\

\f2 \cf4 \cb1 \kerning1\expnd0\expndtw0 (3) \'e4ndert nichts.\
(6) Entfernt aus Z1 
\f0 \cf2 \cb3 \expnd0\expndtw0\kerning0
are, art. Es bleibt bat, bee, boa, ear, eft. Entfernt oaf aus S2. Es bleibt Add, ado, age, ago, aid, air, and, any, ear, far, fit\
(1) Entfernt aus S1 are, art. Es bleibt bat, bee, boa, ear, eft.\
(2) \'e4ndert nichts.\

\f2 \cf4 \cb1 \kerning1\expnd0\expndtw0 (4) \'e4ndert nichts.\
(5) \'e4ndert nichts.\
(7) \'e4ndert nichts.\
(8) Entfernt aus Z2 ado, ago, age, any, fit. Es bleibt \cf4 add, aid, air, and, ear, far, oaf. Entfernt aus S3 age, ago, and, ear, rat, tar. Es bleibt add, ado, are, art, eft, \
(2) Entfernt aus S2 age, ago. Es bleibt Add, ado, aid, air, and, any, ear, far, fit. Z2 \'e4ndert sich nicht.\
(3) Entfernt ear, tar aus Z3. Es bleibt add, ado, age, ago, and, are, art, eft, rat\
(4) Entfernt bat, ear, eft aus Z1. Es bleibt bee,boa. S3 bleibt unver\'e4ndert.\
(1) Entfernt ear, eft aus S1. Es bleibt 
\f0 \cf2 \cb3 \expnd0\expndtw0\kerning0
bat, bee, boa. 
\f2 \cf4 \cb1 \kerning1\expnd0\expndtw0 Z1 bleibt unver\'e4ndert.\
(7) Entfernt far aus Z2. Es bleibt add, aid, air, and, ear, oaf. S1 bleibt unver\'e4ndert.\
(2) \'e4ndert nichts.\
(9) Entfernt aus S2 ado, any, fit. Es bleibt add, aid, air, and, ear, far. Entfernt aus Z3 age, ago, eft, rat. Es bleibt add, ado, are, art.\
(2) \'e4ndert nichts.\
(3) \'e4ndert nichts.\
(5) Entfernt aus S1 bat, bee. Damit bleibt 
\b boa.
\b0 \cf4  Z3 bleibt unver\'e4ndert.\
(1) \'e4ndert nichts.\
(6) Entfernt aus Z1 boa. Damit bleibt 
\b \cf4 bee
\b0 \cf4 . Entfernt aus S2 \cf4 add, aid, air, and, far. Damit bleibt 
\b ear
\b0 .\
(1) \'e4ndert nichts. \
(2) Entfernt aus Z2 add, aid, air, and. Damit bleibt ear, oaf.\
\cf4 (4) Entfernt aus S3 \cf4 add, ado, are, art. Damit bleibt 
\b eft
\b0 \cf4 .\
(3) Entfernt aus Z3 \cf4 add, ado, are. Damit bleibt 
\b art
\b0 \cf4 .\
(5) \'e4ndert nichts. \
(7) Entfernt ear aus Z2. Es bleibt 
\b \cf4 oaf
\b0 \cf4 .\
(2) \'e4ndert nichts.\
(8) \'e4ndert nichts.\
(9) \'e4ndert nichts.\
Terminierung mit korrekten Values.\
}